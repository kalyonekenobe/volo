services:
  backend:
    image: voloteam/volo:backend
    platform: linux/amd64
    build:
      context: backend
      dockerfile: Dockerfile.development
    container_name: volo-backend
    networks:
      - volo-network
    env_file:
      - ./env/.env.development
    ports:
      - 8000:${DOCKER_INTERNAL_BACKEND_PORT}
    volumes:
      - ./backend/src:/app/src
      - ./backend/prisma/migrations:/app/prisma/migrations
      - ./backend/prisma/seeders:/app/prisma/seeders
    depends_on:
      database:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 4096M
    restart: on-failure

  database:
    image: voloteam/volo:database
    platform: linux/amd64
    build:
      context: backend
      dockerfile_inline: |
        FROM postgres:latest
    container_name: volo-database
    networks:
      - volo-network
    env_file:
      - ./env/.env.development
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - ${DOCKER_INTERNAL_DATABASE_PORT}
    expose:
      - ${DOCKER_INTERNAL_DATABASE_PORT}
    volumes:
      - volo-database-volume:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 256M
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: on-failure

  nginx:
    image: voloteam/volo:nginx
    platform: linux/amd64
    build:
      context: backend
      dockerfile_inline: |
        FROM nginx:latest
    container_name: volo-nginx
    networks:
      - volo-network
    env_file: ./env/.env.development
    ports:
      - 80:${DOCKER_INTERNAL_NGINX_PORT}
      - 443:${DOCKER_INTERNAL_NGINX_SSL_PORT}
    volumes:
      - ./backend/nginx/default.development.conf:/etc/nginx/conf.d/default.conf
    expose:
      - ${DOCKER_INTERNAL_NGINX_PORT}
      - ${DOCKER_INTERNAL_NGINX_SSL_PORT}
    depends_on:
      backend:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ['CMD-SHELL', 'service nginx status || exit 1']
      interval: 10s
      timeout: 3s
      retries: 3
    restart: on-failure

  frontend:
    image: voloteam/volo:frontend
    platform: linux/amd64
    build:
      context: frontend
      dockerfile: Dockerfile.development
    container_name: volo-frontend
    networks:
      - volo-network
    env_file:
      - ./env/.env.development
    ports:
      - 3000:${DOCKER_INTERNAL_FRONTEND_PORT}
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      backend:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 1096M
    restart: on-failure

networks:
  volo-network:
    driver: bridge

volumes:
  volo-database-volume:
